version: "3"

services:

  # ferramenta CQRS via CDC
  lenses:
    image: lensesio/box
    restart: unless-stopped
    environment:
      # ADV_HOST: PUBLIC_IP
      ADV_HOST: 127.0.0.1
      EULA: LICENSE
    ports:
      - 3030:3030
      - 9092:9092

  kowl:
    image: quay.io/cloudhut/kowl:v1.2.2
    restart: on-failure
    hostname: kowl
    ports:
    - "8070:8080"
    volumes:
    - ./kowl_config.yaml:/etc/kowl/config.yaml
    entrypoint: ./kowl --config.filepath=/etc/kowl/config.yaml
    depends_on:
      - lenses

  # PRODUTOS Microservice : exemplo Postgres
  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8080:80"
    volumes:
      - "pgadmindata:/var/lib/pgadmin"
      - "./postgres_servers.json:/pgadmin4/servers.json"
    restart: unless-stopped
    depends_on: 
      - postgresdb
      
  postgresdb:
    image: debezium/postgres:13-alpine
    environment:
      POSTGRES_PASSWORD: admin
    volumes:
      - "postgresdata:/var/lib/postgresql/data"
      - "./postgres_init_database.sh:/docker-entrypoint-initdb.d/init-database.sh"

  # PAGAMENTO Microservice : exemplo MongoDB
  mongoexpress:
    image: mongo-express
    ports:
      - "8081:8081"
    restart: unless-stopped
    depends_on: 
      - mongo

  mongo:
    image: mongo:latest
    volumes:
      - mongodata:/data
    ports:
      - "27017:27017"


  # USUARIOS Microservice : exemplo MySQL
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    environment:
      PMA_HOST: mysqldb
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
      PMA_USER: admin
      PMA_PASSWORD: admin
    restart: always
    ports:
      - 8082:80  
    restart: unless-stopped
    depends_on: 
      - mysqldb
    
  mysqldb:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_DATABASE: usuarios
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
    ports:
      - "3306:3306"
    volumes:
      - mysqldata:/var/lib/mysql
      - "./mysql_init_database.sql:/docker-entrypoint-initdb.d/init-database.sql"

  
volumes:
  pgadmindata:
  postgresdata:
  mongodata:
  mysqldata:
